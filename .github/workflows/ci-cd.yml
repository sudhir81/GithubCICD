name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Azure authentication
  ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}

  # Terraform backend
  TF_BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_BACKEND_RG }}
  TF_BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_BACKEND_STORAGE }}
  TF_BACKEND_CONTAINER_NAME: ${{ secrets.AZURE_BACKEND_CONTAINER }}

  # Custom secrets
  VM_ADMIN_PASSWORD: ${{ secrets.VM_ADMIN_PASSWORD }}

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure Terraform Backend Exists
        run: |
          az group create --name $TF_BACKEND_RESOURCE_GROUP_NAME --location eastus
          az storage account create \
            --name $TF_BACKEND_STORAGE_ACCOUNT_NAME \
            --resource-group $TF_BACKEND_RESOURCE_GROUP_NAME \
            --sku Standard_LRS \
            --encryption-services blob
          az storage container create \
            --name $TF_BACKEND_CONTAINER_NAME \
            --account-name $TF_BACKEND_STORAGE_ACCOUNT_NAME

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=$TF_BACKEND_RESOURCE_GROUP_NAME" \
            -backend-config="storage_account_name=$TF_BACKEND_STORAGE_ACCOUNT_NAME" \
            -backend-config="container_name=$TF_BACKEND_CONTAINER_NAME" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan \
          -var "vm_admin_password=$VM_ADMIN_PASSWORD" \
          -var "location=eastus" \
          -var "vm_size=Standard_B2ms"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

  ansible:
    name: Run Ansible Playbooks
    runs-on: ubuntu-latest
    needs: terraform

    defaults:
      run:
        working-directory: ./ansible

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible & Azure Collection
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible python3-pip
          pip3 install ansible[azure]

      - name: Run Ansible Playbook (dc01)
        run: ansible-playbook -i inventory.tpl dc01.yml

      - name: Run Ansible Playbook (ws01)
        run: ansible-playbook -i inventory.tpl ws01.yml
